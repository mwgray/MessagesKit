/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import <Thrift/TProtocol.h>
#import <Thrift/TProtocolFactory.h>
#import <Thrift/TApplicationError.h>
#import <Thrift/TProtocolError.h>
#import <Thrift/TProtocolUtil.h>
#import <Thrift/TProcessor.h>
#import <Thrift/TBase.h>
#import <Thrift/TAsyncTransport.h>
#import <Thrift/TBaseClient.h>

#import <PromiseKit/PromiseKit.h>

typedef NS_ENUM(SInt32, RTAliasType) {
  RTAliasTypeEMailAddress = 0,
  RTAliasTypePhoneNumber = 1
};

typedef NS_ENUM(SInt32, RTUserStatus) {
  RTUserStatusOnline = 0,
  RTUserStatusOffline = 1,
  RTUserStatusTyping = 2,
  RTUserStatusPhotographing = 3,
  RTUserStatusRecordingVideo = 4,
  RTUserStatusRecordingAudio = 5,
  RTUserStatusLocating = 6,
  RTUserStatusSelectingContact = 7,
  RTUserStatusNoStatus = 8
};

typedef NS_ENUM(SInt32, RTMsgType) {
  RTMsgTypeText = 0,
  RTMsgTypeImage = 1,
  RTMsgTypeAudio = 2,
  RTMsgTypeVideo = 3,
  RTMsgTypeLocation = 4,
  RTMsgTypeContact = 5,
  RTMsgTypeView = 6,
  RTMsgTypeEnter = 7,
  RTMsgTypeExit = 8,
  RTMsgTypeClarify = 9,
  RTMsgTypeDelete = 10,
  RTMsgTypeConference = 11,
  RTMsgTypeFile = 12,
  RTMsgTypeAuthorize = 13,
  RTMsgTypeKeySet = 14
};

typedef NS_ENUM(SInt32, RTEncryptionType) {
  RTEncryptionTypeVer1_AES256_CBC = 0
};

typedef NS_ENUM(SInt32, RTSignatureType) {
  RTSignatureTypeVer1_SHA256_PSS32 = 0,
  RTSignatureTypeVer2_SHA256_PKCS1 = 1
};

typedef NS_ENUM(SInt32, RTNotificationType) {
  RTNotificationTypeMessage = 0,
  RTNotificationTypeInformation = 1
};

typedef NS_ENUM(SInt32, RTDeviceServiceOp) {
  RTDeviceServiceOpUserStatus = 0,
  RTDeviceServiceOpGroupStatus = 1,
  RTDeviceServiceOpMsgDelivery = 2,
  RTDeviceServiceOpMsgReady = 3,
  RTDeviceServiceOpMsgDelivered = 4,
  RTDeviceServiceOpMsgDirect = 5
};

typedef NS_ENUM(SInt32, RTConferenceStatus) {
  RTConferenceStatusWaiting = 0,
  RTConferenceStatusInProgress = 1,
  RTConferenceStatusCompleted = 2,
  RTConferenceStatusMissed = 3
};

typedef NSArray<NSData *> * RTDataList;

typedef NSMutableArray<NSData *> * RTMutableDataList;

@class RTId;
typedef NSArray<RTId *> * RTIdList;

typedef NSMutableArray<RTId *> * RTMutableIdList;

typedef SInt64 RTTimeStamp;

typedef NSString * RTAlias;

typedef NSSet<RTAlias> * RTAliasSet;

typedef NSMutableSet<RTAlias> * RTMutableAliasSet;

@class RTEnvelope;
typedef NSArray<RTEnvelope *> * RTEnvelopeList;

typedef NSMutableArray<RTEnvelope *> * RTMutableEnvelopeList;

@class RTDirectEnvelope;
typedef NSArray<RTDirectEnvelope *> * RTDirectEnvelopeList;

typedef NSMutableArray<RTDirectEnvelope *> * RTMutableDirectEnvelopeList;

@interface RTId : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSData * data;
@property (assign, nonatomic) BOOL dataIsSet;
- (void) unsetData;


- (instancetype) initWithData: (NSData *) data;

@end

@interface RTGroup : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * chat;
@property (assign, nonatomic) BOOL chatIsSet;
- (void) unsetChat;

@property (strong, nonatomic) RTMutableAliasSet members;
@property (assign, nonatomic) BOOL membersIsSet;
- (void) unsetMembers;


- (instancetype) initWithChat: (RTId *) chat members: (RTAliasSet) members;

@end

@interface RTMsg : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (assign, nonatomic) RTMsgType type;
@property (assign, nonatomic) BOOL typeIsSet;
- (void) unsetType;

@property (strong, nonatomic) RTAlias sender;
@property (assign, nonatomic) BOOL senderIsSet;
- (void) unsetSender;

@property (strong, nonatomic) RTAlias recipient;
@property (assign, nonatomic) BOOL recipientIsSet;
- (void) unsetRecipient;

@property (strong, nonatomic) RTGroup * group;
@property (assign, nonatomic) BOOL groupIsSet;
- (void) unsetGroup;

@property (strong, nonatomic) NSData * key;
@property (assign, nonatomic) BOOL keyIsSet;
- (void) unsetKey;

@property (strong, nonatomic) NSData * signature;
@property (assign, nonatomic) BOOL signatureIsSet;
- (void) unsetSignature;

@property (strong, nonatomic) NSData * data;
@property (assign, nonatomic) BOOL dataIsSet;
- (void) unsetData;

@property (strong, nonatomic) NSMutableDictionary<NSString *, NSString *> * metaData;
@property (assign, nonatomic) BOOL metaDataIsSet;
- (void) unsetMetaData;

@property (assign, nonatomic) RTTimeStamp sent;
@property (assign, nonatomic) BOOL sentIsSet;
- (void) unsetSent;

@property (assign, nonatomic) SInt8 flags;
@property (assign, nonatomic) BOOL flagsIsSet;
- (void) unsetFlags;


- (instancetype) initWithId: (RTId *) id type: (RTMsgType) type sender: (RTAlias) sender recipient: (RTAlias) recipient group: (RTGroup *) group key: (NSData *) key signature: (NSData *) signature data: (NSData *) data metaData: (NSDictionary<NSString *, NSString *> *) metaData sent: (RTTimeStamp) sent flags: (SInt8) flags;

@end

@interface RTEnvelope : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias recipient;
@property (assign, nonatomic) BOOL recipientIsSet;
- (void) unsetRecipient;

@property (strong, nonatomic) NSData * key;
@property (assign, nonatomic) BOOL keyIsSet;
- (void) unsetKey;

@property (strong, nonatomic) NSData * signature;
@property (assign, nonatomic) BOOL signatureIsSet;
- (void) unsetSignature;

@property (strong, nonatomic) NSData * fingerprint;
@property (assign, nonatomic) BOOL fingerprintIsSet;
- (void) unsetFingerprint;


- (instancetype) initWithRecipient: (RTAlias) recipient key: (NSData *) key signature: (NSData *) signature fingerprint: (NSData *) fingerprint;

@end

@interface RTDirectMsg : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (strong, nonatomic) NSString * type;
@property (assign, nonatomic) BOOL typeIsSet;
- (void) unsetType;

@property (strong, nonatomic) RTAlias sender;
@property (assign, nonatomic) BOOL senderIsSet;
- (void) unsetSender;

@property (strong, nonatomic) RTId * senderDevice;
@property (assign, nonatomic) BOOL senderDeviceIsSet;
- (void) unsetSenderDevice;

@property (strong, nonatomic) NSData * key;
@property (assign, nonatomic) BOOL keyIsSet;
- (void) unsetKey;

@property (strong, nonatomic) NSData * signature;
@property (assign, nonatomic) BOOL signatureIsSet;
- (void) unsetSignature;

@property (strong, nonatomic) NSData * data;
@property (assign, nonatomic) BOOL dataIsSet;
- (void) unsetData;


- (instancetype) initWithId: (RTId *) id type: (NSString *) type sender: (RTAlias) sender senderDevice: (RTId *) senderDevice key: (NSData *) key signature: (NSData *) signature data: (NSData *) data;

@end

@interface RTDirectEnvelope : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias recipient;
@property (assign, nonatomic) BOOL recipientIsSet;
- (void) unsetRecipient;

@property (strong, nonatomic) RTId * device;
@property (assign, nonatomic) BOOL deviceIsSet;
- (void) unsetDevice;

@property (strong, nonatomic) NSData * key;
@property (assign, nonatomic) BOOL keyIsSet;
- (void) unsetKey;

@property (strong, nonatomic) NSData * signature;
@property (assign, nonatomic) BOOL signatureIsSet;
- (void) unsetSignature;

@property (strong, nonatomic) NSData * fingerprint;
@property (assign, nonatomic) BOOL fingerprintIsSet;
- (void) unsetFingerprint;


- (instancetype) initWithRecipient: (RTAlias) recipient device: (RTId *) device key: (NSData *) key signature: (NSData *) signature fingerprint: (NSData *) fingerprint;

@end

@interface RTMsgPack : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (assign, nonatomic) RTMsgType type;
@property (assign, nonatomic) BOOL typeIsSet;
- (void) unsetType;

@property (strong, nonatomic) RTAlias sender;
@property (assign, nonatomic) BOOL senderIsSet;
- (void) unsetSender;

@property (strong, nonatomic) RTMutableEnvelopeList envelopes;
@property (assign, nonatomic) BOOL envelopesIsSet;
- (void) unsetEnvelopes;

@property (strong, nonatomic) RTId * chat;
@property (assign, nonatomic) BOOL chatIsSet;
- (void) unsetChat;

@property (strong, nonatomic) NSMutableDictionary<NSString *, NSString *> * metaData;
@property (assign, nonatomic) BOOL metaDataIsSet;
- (void) unsetMetaData;

@property (strong, nonatomic) NSData * data;
@property (assign, nonatomic) BOOL dataIsSet;
- (void) unsetData;


- (instancetype) initWithId: (RTId *) id type: (RTMsgType) type sender: (RTAlias) sender envelopes: (RTEnvelopeList) envelopes chat: (RTId *) chat metaData: (NSDictionary<NSString *, NSString *> *) metaData data: (NSData *) data;

@end

@interface RTMsgHdr : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (assign, nonatomic) RTMsgType type;
@property (assign, nonatomic) BOOL typeIsSet;
- (void) unsetType;

@property (assign, nonatomic) SInt32 dataLength;
@property (assign, nonatomic) BOOL dataLengthIsSet;
- (void) unsetDataLength;


- (instancetype) initWithId: (RTId *) id type: (RTMsgType) type dataLength: (SInt32) dataLength;

@end

@interface RTDeviceInfo : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (strong, nonatomic) NSString * name;
@property (assign, nonatomic) BOOL nameIsSet;
- (void) unsetName;

@property (strong, nonatomic) NSString * manufacturer;
@property (assign, nonatomic) BOOL manufacturerIsSet;
- (void) unsetManufacturer;

@property (strong, nonatomic) NSString * model;
@property (assign, nonatomic) BOOL modelIsSet;
- (void) unsetModel;

@property (strong, nonatomic) NSString * version;
@property (assign, nonatomic) BOOL versionIsSet;
- (void) unsetVersion;

@property (strong, nonatomic) NSString * osVersion;
@property (assign, nonatomic) BOOL osVersionIsSet;
- (void) unsetOsVersion;

@property (strong, nonatomic) RTMutableAliasSet activeAliases;
@property (assign, nonatomic) BOOL activeAliasesIsSet;
- (void) unsetActiveAliases;


- (instancetype) initWithId: (RTId *) id name: (NSString *) name manufacturer: (NSString *) manufacturer model: (NSString *) model version: (NSString *) version osVersion: (NSString *) osVersion activeAliases: (RTAliasSet) activeAliases;

@end

@interface RTImage : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * mimeType;
@property (assign, nonatomic) BOOL mimeTypeIsSet;
- (void) unsetMimeType;

@property (strong, nonatomic) NSData * data;
@property (assign, nonatomic) BOOL dataIsSet;
- (void) unsetData;


- (instancetype) initWithMimeType: (NSString *) mimeType data: (NSData *) data;

@end

@interface RTUserInfo : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (strong, nonatomic) RTMutableAliasSet aliases;
@property (assign, nonatomic) BOOL aliasesIsSet;
- (void) unsetAliases;

@property (strong, nonatomic) NSData * encryptionCert;
@property (assign, nonatomic) BOOL encryptionCertIsSet;
- (void) unsetEncryptionCert;

@property (strong, nonatomic) NSData * signingCert;
@property (assign, nonatomic) BOOL signingCertIsSet;
- (void) unsetSigningCert;

@property (strong, nonatomic) RTImage * avatar;
@property (assign, nonatomic) BOOL avatarIsSet;
- (void) unsetAvatar;


- (instancetype) initWithId: (RTId *) id aliases: (RTAliasSet) aliases encryptionCert: (NSData *) encryptionCert signingCert: (NSData *) signingCert avatar: (RTImage *) avatar;

@end

@interface RTUserProfile : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * id;
@property (assign, nonatomic) BOOL idIsSet;
- (void) unsetId;

@property (strong, nonatomic) RTMutableAliasSet aliases;
@property (assign, nonatomic) BOOL aliasesIsSet;
- (void) unsetAliases;

@property (strong, nonatomic) NSData * encryptionCert;
@property (assign, nonatomic) BOOL encryptionCertIsSet;
- (void) unsetEncryptionCert;

@property (strong, nonatomic) NSData * signingCert;
@property (assign, nonatomic) BOOL signingCertIsSet;
- (void) unsetSigningCert;

@property (strong, nonatomic) NSMutableArray<RTDeviceInfo *> * devices;
@property (assign, nonatomic) BOOL devicesIsSet;
- (void) unsetDevices;

@property (strong, nonatomic) RTImage * avatar;
@property (assign, nonatomic) BOOL avatarIsSet;
- (void) unsetAvatar;


- (instancetype) initWithId: (RTId *) id aliases: (RTAliasSet) aliases encryptionCert: (NSData *) encryptionCert signingCert: (NSData *) signingCert devices: (NSArray<RTDeviceInfo *> *) devices avatar: (RTImage *) avatar;

@end

enum {
  RTMessagesErrorInvalidUser = -60000
};

@interface RTInvalidUser : NSError <TBase, NSCoding, NSCopying> 



@end

enum {
  RTMessagesErrorInvalidDevice = -60001
};

@interface RTInvalidDevice : NSError <TBase, NSCoding, NSCopying> 



@end

enum {
  RTMessagesErrorInvalidSender = -60002
};

@interface RTInvalidSender : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias offender;
@property (assign, nonatomic) BOOL offenderIsSet;
- (void) unsetOffender;


- (instancetype) initWithOffender: (RTAlias) offender;

@end

enum {
  RTMessagesErrorInvalidRecipient = -60003
};

@interface RTInvalidRecipient : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias offender;
@property (assign, nonatomic) BOOL offenderIsSet;
- (void) unsetOffender;


- (instancetype) initWithOffender: (RTAlias) offender;

@end

enum {
  RTMessagesErrorInvalidAlias = -60004
};

@interface RTInvalidAlias : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias offender;
@property (assign, nonatomic) BOOL offenderIsSet;
- (void) unsetOffender;


- (instancetype) initWithOffender: (RTAlias) offender;

@end

enum {
  RTMessagesErrorInvalidCredentials = -60005
};

@interface RTInvalidCredentials : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias recipient;
@property (assign, nonatomic) BOOL recipientIsSet;
- (void) unsetRecipient;


- (instancetype) initWithRecipient: (RTAlias) recipient;

@end

enum {
  RTMessagesErrorDeviceInUse = -60006
};

@interface RTDeviceInUse : NSError <TBase, NSCoding, NSCopying> 



@end

enum {
  RTMessagesErrorMessageUndeliverable = -60007
};

@interface RTMessageUndeliverable : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * reason;
@property (assign, nonatomic) BOOL reasonIsSet;
- (void) unsetReason;


- (instancetype) initWithReason: (NSString *) reason;

@end

@interface RTAuthenticatedAlias : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * name;
@property (assign, nonatomic) BOOL nameIsSet;
- (void) unsetName;

@property (strong, nonatomic) NSString * pin;
@property (assign, nonatomic) BOOL pinIsSet;
- (void) unsetPin;


- (instancetype) initWithName: (NSString *) name pin: (NSString *) pin;

@end

enum {
  RTMessagesErrorAliasInUse = -60008
};

@interface RTAliasInUse : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias problemAlias;
@property (assign, nonatomic) BOOL problemAliasIsSet;
- (void) unsetProblemAlias;


- (instancetype) initWithProblemAlias: (RTAlias) problemAlias;

@end

enum {
  RTMessagesErrorAliasPinInvalid = -60009
};

@interface RTAliasPinInvalid : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias problemAlias;
@property (assign, nonatomic) BOOL problemAliasIsSet;
- (void) unsetProblemAlias;


- (instancetype) initWithProblemAlias: (RTAlias) problemAlias;

@end

enum {
  RTMessagesErrorAliasNotAuthenticated = -60010
};

@interface RTAliasNotAuthenticated : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTAlias problemAlias;
@property (assign, nonatomic) BOOL problemAliasIsSet;
- (void) unsetProblemAlias;


- (instancetype) initWithProblemAlias: (RTAlias) problemAlias;

@end

enum {
  RTMessagesErrorUnableToAuthenticate = -60011
};

@interface RTUnableToAuthenticate : NSError <TBase, NSCoding, NSCopying> 



@end

enum {
  RTMessagesErrorSignInDisallowed = -60012
};

@interface RTSignInDisallowed : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface RTInvite : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * bodyText;
@property (assign, nonatomic) BOOL bodyTextIsSet;
- (void) unsetBodyText;

@property (strong, nonatomic) NSString * bodyHtml;
@property (assign, nonatomic) BOOL bodyHtmlIsSet;
- (void) unsetBodyHtml;

@property (strong, nonatomic) NSString * subject;
@property (assign, nonatomic) BOOL subjectIsSet;
- (void) unsetSubject;


- (instancetype) initWithBodyText: (NSString *) bodyText bodyHtml: (NSString *) bodyHtml subject: (NSString *) subject;

@end

enum {
  RTMessagesErrorAliasAlreadyInvited = -60013
};

@interface RTAliasAlreadyInvited : NSError <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * problemAlias;
@property (assign, nonatomic) BOOL problemAliasIsSet;
- (void) unsetProblemAlias;


- (instancetype) initWithProblemAlias: (NSString *) problemAlias;

@end

@interface RTCertificateSet : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSData * encryptionCert;
@property (assign, nonatomic) BOOL encryptionCertIsSet;
- (void) unsetEncryptionCert;

@property (strong, nonatomic) NSData * signingCert;
@property (assign, nonatomic) BOOL signingCertIsSet;
- (void) unsetSigningCert;


- (instancetype) initWithEncryptionCert: (NSData *) encryptionCert signingCert: (NSData *) signingCert;

@end

@interface RTLocation : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * title;
@property (assign, nonatomic) BOOL titleIsSet;
- (void) unsetTitle;

@property (assign, nonatomic) double longitude;
@property (assign, nonatomic) BOOL longitudeIsSet;
- (void) unsetLongitude;

@property (assign, nonatomic) double latitude;
@property (assign, nonatomic) BOOL latitudeIsSet;
- (void) unsetLatitude;


- (instancetype) initWithTitle: (NSString *) title longitude: (double) longitude latitude: (double) latitude;

@end

@interface RTConference : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * callingDeviceId;
@property (assign, nonatomic) BOOL callingDeviceIdIsSet;
- (void) unsetCallingDeviceId;

@property (assign, nonatomic) RTConferenceStatus status;
@property (assign, nonatomic) BOOL statusIsSet;
- (void) unsetStatus;

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithCallingDeviceId: (RTId *) callingDeviceId status: (RTConferenceStatus) status message: (NSString *) message;

@end

@interface RTAuthorizeRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) RTId * deviceId;
@property (assign, nonatomic) BOOL deviceIdIsSet;
- (void) unsetDeviceId;

@property (strong, nonatomic) NSString * deviceName;
@property (assign, nonatomic) BOOL deviceNameIsSet;
- (void) unsetDeviceName;

@property (strong, nonatomic) NSData * deviceEncryptionCert;
@property (assign, nonatomic) BOOL deviceEncryptionCertIsSet;
- (void) unsetDeviceEncryptionCert;

@property (strong, nonatomic) NSData * deviceSigningCert;
@property (assign, nonatomic) BOOL deviceSigningCertIsSet;
- (void) unsetDeviceSigningCert;

@property (strong, nonatomic) NSString * requestor;
@property (assign, nonatomic) BOOL requestorIsSet;
- (void) unsetRequestor;


- (instancetype) initWithDeviceId: (RTId *) deviceId deviceName: (NSString *) deviceName deviceEncryptionCert: (NSData *) deviceEncryptionCert deviceSigningCert: (NSData *) deviceSigningCert requestor: (NSString *) requestor;

@end

@interface RTKeySet : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSData * encryptionKeyPair;
@property (assign, nonatomic) BOOL encryptionKeyPairIsSet;
- (void) unsetEncryptionKeyPair;

@property (strong, nonatomic) NSData * signingKeyPair;
@property (assign, nonatomic) BOOL signingKeyPairIsSet;
- (void) unsetSigningKeyPair;


- (instancetype) initWithEncryptionKeyPair: (NSData *) encryptionKeyPair signingKeyPair: (NSData *) signingKeyPair;

@end

@protocol RTUserAPI <NSObject>
- (BOOL) registerNotifications: (RTNotificationType) type platform: (NSString *) platform token: (NSData *) token error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTCertificateSet *) updateCertificates: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) updateAvatar: (RTImage *) avatar error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTAliasSet) listAliases: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) registerAlias: (RTAuthenticatedAlias *) authenticatedAlias error: (NSError *__autoreleasing *)__thriftError;  // throws RTAliasInUse *, RTAliasPinInvalid *, RTAliasNotAuthenticated *, TException
- (BOOL) unregisterAlias: (RTAlias) name error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSArray<RTDeviceInfo *> *) listDevices: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) updateDeviceActiveAliases: (RTId *) deviceId activeAliases: (RTAliasSet) activeAliases error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSArray<RTMsgHdr *> *) fetchWaiting: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTMsg *) fetch: (RTId *) msgId error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) ack: (RTId *) msgId sent: (RTTimeStamp) sent error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSNumber *) send: (RTMsgPack *) msgPack error: (NSError *__autoreleasing *)__thriftError;  // throws RTInvalidSender *, RTInvalidRecipient *, RTInvalidCredentials *, TException
- (BOOL) sendUserStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) sendGroupStatus: (RTAlias) sender group: (RTGroup *) group status: (RTUserStatus) status error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) sendDirect: (RTId *) msgId msgType: (NSString *) msgType msgData: (NSData *) msgData sender: (NSString *) sender envelopes: (RTDirectEnvelopeList) envelopes error: (NSError *__autoreleasing *)__thriftError;  // throws RTInvalidSender *, RTInvalidRecipient *, RTInvalidCredentials *, TException
- (RTAliasSet) updateConnections: (NSSet<NSData *> *) newPeers oldPeers: (NSSet<NSData *> *) oldPeers error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) clearConnections: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTInvite *) generateInvite: (NSString *) inviteeAlias inviteeName: (NSString *) inviteeName params: (NSDictionary<NSString *, NSString *> *) params error: (NSError *__autoreleasing *)__thriftError;  // throws RTAliasInUse *, RTAliasAlreadyInvited *, RTInvalidAlias *, TException
@end

@interface RTUserAPIClient : TBaseClient <RTUserAPI> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface RTUserAPIProcessor : NSObject <TProcessor> 
- (id) initWithUserAPI: (id <RTUserAPI>) service;
- (id<RTUserAPI>) service;
@end

@protocol RTUserAPIAsync <NSObject>
- (void) registerNotifications: (RTNotificationType) type platform: (NSString *) platform token: (NSData *) token response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) registerNotifications: (RTNotificationType) type platform: (NSString *) platform token: (NSData *) token;
- (void) updateCertificates: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR response: (void (^)(RTCertificateSet *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) updateCertificates: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR;
- (void) updateAvatar: (RTImage *) avatar response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) updateAvatar: (RTImage *) avatar;
- (void) listAliases: (void (^)(RTAliasSet)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) listAliases;
- (void) registerAlias: (RTAuthenticatedAlias *) authenticatedAlias response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) registerAlias: (RTAuthenticatedAlias *) authenticatedAlias;
- (void) unregisterAlias: (RTAlias) name response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) unregisterAlias: (RTAlias) name;
- (void) listDevices: (void (^)(NSArray<RTDeviceInfo *> *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) listDevices;
- (void) updateDeviceActiveAliases: (RTId *) deviceId activeAliases: (RTAliasSet) activeAliases response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) updateDeviceActiveAliases: (RTId *) deviceId activeAliases: (RTAliasSet) activeAliases;
- (void) fetchWaiting: (void (^)(NSArray<RTMsgHdr *> *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) fetchWaiting;
- (void) fetch: (RTId *) msgId response: (void (^)(RTMsg *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) fetch: (RTId *) msgId;
- (void) ack: (RTId *) msgId sent: (RTTimeStamp) sent response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) ack: (RTId *) msgId sent: (RTTimeStamp) sent;
- (void) send: (RTMsgPack *) msgPack response: (void (^)(RTTimeStamp)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) send: (RTMsgPack *) msgPack;
- (void) sendUserStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) sendUserStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status;
- (void) sendGroupStatus: (RTAlias) sender group: (RTGroup *) group status: (RTUserStatus) status response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) sendGroupStatus: (RTAlias) sender group: (RTGroup *) group status: (RTUserStatus) status;
- (void) sendDirect: (RTId *) msgId msgType: (NSString *) msgType msgData: (NSData *) msgData sender: (NSString *) sender envelopes: (RTDirectEnvelopeList) envelopes response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) sendDirect: (RTId *) msgId msgType: (NSString *) msgType msgData: (NSData *) msgData sender: (NSString *) sender envelopes: (RTDirectEnvelopeList) envelopes;
- (void) updateConnections: (NSSet<NSData *> *) newPeers oldPeers: (NSSet<NSData *> *) oldPeers response: (void (^)(RTAliasSet)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) updateConnections: (NSSet<NSData *> *) newPeers oldPeers: (NSSet<NSData *> *) oldPeers;
- (void) clearConnections: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) clearConnections;
- (void) generateInvite: (NSString *) inviteeAlias inviteeName: (NSString *) inviteeName params: (NSDictionary<NSString *, NSString *> *) params response: (void (^)(RTInvite *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) generateInvite: (NSString *) inviteeAlias inviteeName: (NSString *) inviteeName params: (NSDictionary<NSString *, NSString *> *) params;
@end

@interface RTUserAPIClientAsync : TBaseClient <RTUserAPIAsync> 

- (id) initWithProtocolFactory: (id <TProtocolFactory>) protocolFactory transportFactory: (id <TAsyncTransportFactory>) transportFactory;
@end

@protocol RTPublicAPI <NSObject>
- (RTUserInfo *) findUserWithAlias: (RTAlias) name error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTUserInfo *) findUserWithId: (RTId *) userId error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) requestAliasAuthentication: (RTAlias) name error: (NSError *__autoreleasing *)__thriftError;  // throws RTAliasInUse *, RTUnableToAuthenticate *, TException
- (NSNumber *) checkAliasAuthentication: (RTAlias) name pin: (NSString *) pin error: (NSError *__autoreleasing *)__thriftError;  // throws RTAliasNotAuthenticated *, TException
- (RTUserProfile *) findProfileWithId: (RTId *) userId password: (NSString *) password error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTUserProfile *) findProfileWithAlias: (NSString *) userAlias password: (NSString *) password error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTUserProfile *) registerUser: (NSString *) password encryptionCSR: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR authenticatedAliases: (NSArray<RTAuthenticatedAlias *> *) authenticatedAliases deviceInfo: (RTDeviceInfo *) deviceInfo error: (NSError *__autoreleasing *)__thriftError;  // throws RTAliasInUse *, RTAliasNotAuthenticated *, RTAliasPinInvalid *, RTDeviceInUse *, TException
- (NSData *) signIn: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId error: (NSError *__autoreleasing *)__thriftError;  // throws RTInvalidDevice *, RTSignInDisallowed *, TException
- (NSString *) generateAccessToken: (RTId *) userId deviceId: (RTId *) deviceId refreshToken: (NSData *) refreshToken error: (NSError *__autoreleasing *)__thriftError;  // throws RTInvalidUser *, RTInvalidDevice *, TException
- (BOOL) registerDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo error: (NSError *__autoreleasing *)__thriftError;  // throws RTDeviceInUse *, TException
- (BOOL) replaceRegisteredDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo currentDeviceId: (RTId *) currentDeviceId error: (NSError *__autoreleasing *)__thriftError;  // throws RTDeviceInUse *, RTInvalidDevice *, TException
- (BOOL) unregisterDevice: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSNumber *) changePassword: (RTId *) userId oldPassword: (NSString *) oldPassword newPassword: (NSString *) newPassword error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (RTId *) requestTemporaryPassword: (RTAlias) name error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSNumber *) checkTemporaryPassword: (RTId *) userId tempPassword: (NSString *) tempPassword error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NSNumber *) resetPassword: (RTId *) userId tempPassword: (NSString *) tempPassword password: (NSString *) password error: (NSError *__autoreleasing *)__thriftError;  // throws TException
@end

@interface RTPublicAPIClient : TBaseClient <RTPublicAPI> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface RTPublicAPIProcessor : NSObject <TProcessor> 
- (id) initWithPublicAPI: (id <RTPublicAPI>) service;
- (id<RTPublicAPI>) service;
@end

@protocol RTPublicAPIAsync <NSObject>
- (void) findUserWithAlias: (RTAlias) name response: (void (^)(RTUserInfo *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) findUserWithAlias: (RTAlias) name;
- (void) findUserWithId: (RTId *) userId response: (void (^)(RTUserInfo *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) findUserWithId: (RTId *) userId;
- (void) requestAliasAuthentication: (RTAlias) name response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) requestAliasAuthentication: (RTAlias) name;
- (void) checkAliasAuthentication: (RTAlias) name pin: (NSString *) pin response: (void (^)(BOOL)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) checkAliasAuthentication: (RTAlias) name pin: (NSString *) pin;
- (void) findProfileWithId: (RTId *) userId password: (NSString *) password response: (void (^)(RTUserProfile *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) findProfileWithId: (RTId *) userId password: (NSString *) password;
- (void) findProfileWithAlias: (NSString *) userAlias password: (NSString *) password response: (void (^)(RTUserProfile *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) findProfileWithAlias: (NSString *) userAlias password: (NSString *) password;
- (void) registerUser: (NSString *) password encryptionCSR: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR authenticatedAliases: (NSArray<RTAuthenticatedAlias *> *) authenticatedAliases deviceInfo: (RTDeviceInfo *) deviceInfo response: (void (^)(RTUserProfile *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) registerUser: (NSString *) password encryptionCSR: (NSData *) encryptionCSR signingCSR: (NSData *) signingCSR authenticatedAliases: (NSArray<RTAuthenticatedAlias *> *) authenticatedAliases deviceInfo: (RTDeviceInfo *) deviceInfo;
- (void) signIn: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId response: (void (^)(NSData *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) signIn: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId;
- (void) generateAccessToken: (RTId *) userId deviceId: (RTId *) deviceId refreshToken: (NSData *) refreshToken response: (void (^)(NSString *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) generateAccessToken: (RTId *) userId deviceId: (RTId *) deviceId refreshToken: (NSData *) refreshToken;
- (void) registerDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) registerDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo;
- (void) replaceRegisteredDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo currentDeviceId: (RTId *) currentDeviceId response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) replaceRegisteredDevice: (RTId *) userId password: (NSString *) password deviceInfo: (RTDeviceInfo *) deviceInfo currentDeviceId: (RTId *) currentDeviceId;
- (void) unregisterDevice: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) unregisterDevice: (RTId *) userId password: (NSString *) password deviceId: (RTId *) deviceId;
- (void) changePassword: (RTId *) userId oldPassword: (NSString *) oldPassword newPassword: (NSString *) newPassword response: (void (^)(BOOL)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) changePassword: (RTId *) userId oldPassword: (NSString *) oldPassword newPassword: (NSString *) newPassword;
- (void) requestTemporaryPassword: (RTAlias) name response: (void (^)(RTId *)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) requestTemporaryPassword: (RTAlias) name;
- (void) checkTemporaryPassword: (RTId *) userId tempPassword: (NSString *) tempPassword response: (void (^)(BOOL)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) checkTemporaryPassword: (RTId *) userId tempPassword: (NSString *) tempPassword;
- (void) resetPassword: (RTId *) userId tempPassword: (NSString *) tempPassword password: (NSString *) password response: (void (^)(BOOL)) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) resetPassword: (RTId *) userId tempPassword: (NSString *) tempPassword password: (NSString *) password;
@end

@interface RTPublicAPIClientAsync : TBaseClient <RTPublicAPIAsync> 

- (id) initWithProtocolFactory: (id <TProtocolFactory>) protocolFactory transportFactory: (id <TAsyncTransportFactory>) transportFactory;
@end

@protocol RTDeviceService <NSObject>
- (BOOL) userStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) groupStatus: (RTAlias) sender chatId: (RTId *) chatId status: (RTUserStatus) status error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) msgDelivery: (RTMsg *) msg error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) msgReady: (RTMsgHdr *) msgHdr error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) msgDelivered: (RTId *) msgId recipient: (RTAlias) recipient error: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (BOOL) msgDirect: (RTDirectMsg *) msg error: (NSError *__autoreleasing *)__thriftError;  // throws TException
@end

@interface RTDeviceServiceClient : TBaseClient <RTDeviceService> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface RTDeviceServiceProcessor : NSObject <TProcessor> 
- (id) initWithDeviceService: (id <RTDeviceService>) service;
- (id<RTDeviceService>) service;
@end

@protocol RTDeviceServiceAsync <NSObject>
- (void) userStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) userStatus: (RTAlias) sender recipient: (RTAlias) recipient status: (RTUserStatus) status;
- (void) groupStatus: (RTAlias) sender chatId: (RTId *) chatId status: (RTUserStatus) status response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) groupStatus: (RTAlias) sender chatId: (RTId *) chatId status: (RTUserStatus) status;
- (void) msgDelivery: (RTMsg *) msg response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) msgDelivery: (RTMsg *) msg;
- (void) msgReady: (RTMsgHdr *) msgHdr response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) msgReady: (RTMsgHdr *) msgHdr;
- (void) msgDelivered: (RTId *) msgId recipient: (RTAlias) recipient response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) msgDelivered: (RTId *) msgId recipient: (RTAlias) recipient;
- (void) msgDirect: (RTDirectMsg *) msg response: (void (^)()) responseBlock failure : (TAsyncFailureBlock) failureBlock;
- (AnyPromise *) msgDirect: (RTDirectMsg *) msg;
@end

@interface RTDeviceServiceClientAsync : TBaseClient <RTDeviceServiceAsync> 

- (id) initWithProtocolFactory: (id <TProtocolFactory>) protocolFactory transportFactory: (id <TAsyncTransportFactory>) transportFactory;
@end

FOUNDATION_EXPORT NSString *RTMessagesErrorDomain;

FOUNDATION_EXPORT SInt8 RTMsgFlagCC;
FOUNDATION_EXPORT SInt8 RTMsgFlagSilent;
FOUNDATION_EXPORT NSString * RTMetaDataKey_MimeType;
FOUNDATION_EXPORT NSString * RTMetaDataKey_Title;
FOUNDATION_EXPORT NSString * RTMetaDataKey_ThumbnailFrameTime;
FOUNDATION_EXPORT NSString * RTVideoType_MP4;
FOUNDATION_EXPORT NSString * RTAudioType_WAV;
FOUNDATION_EXPORT NSString * RTAudioType_MP3;
FOUNDATION_EXPORT NSString * RTAudioType_MP4;
FOUNDATION_EXPORT NSString * RTImageType_PNG;
FOUNDATION_EXPORT NSString * RTImageType_JPG;
FOUNDATION_EXPORT NSString * RTMetaDataKey_TargetMessageId;
FOUNDATION_EXPORT NSString * RTMetaDataKey_DeleteType;
FOUNDATION_EXPORT NSString * RTDeleteType_Message;
FOUNDATION_EXPORT NSString * RTDeleteType_Chat;

